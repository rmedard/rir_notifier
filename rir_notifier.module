<?php
/**
* @file
* A description of what your module does.
*/

use Drupal\node\NodeInterface;
use Drupal\webform\WebformSubmissionInterface;

/**
 * Implements hook_page_attachments().
 */
function rir_notifier_page_attachments(array &$attachments) {
  if (Drupal::currentUser()->isAnonymous()){
    $attachments['#attached']['library'][] = 'rir_notifier/rir_scripts';
    $attachments['#attached']['library'][] = 'core/drupal.dialog.ajax';
  }
}

/**
 * Implements hook_theme().
 */
function rir_notifier_theme($existing, $type, $theme, $path) {

  return [
    'rir_subscribe_search' => [
      'variables' => [
        'button' => t('Subscribe'),
      ]
    ]
  ];
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function rir_notifier_webform_submission_insert(WebformSubmissionInterface $entity) {
  if ($entity->getWebform()->id() == 'notification_subscription'){
    $location = $entity->getData('notif_property_location');
    $advertType = $entity->getData('notif_advert_type');
    $propertyType = $entity->getData('notif_property_type');
    $email = $entity->getData('notif_email');
    $firstName = $entity->getData('notif_firstname');
    $lastName = $entity->getData('notif_lastname');
    $referenceNbr = getRequestCategoryReference($location, $advertType, $propertyType);

    $alertsQueueWorker = Drupal::queue('alerts_processor');
    $data = (object)['email' => $email, 'first_name' => $firstName, 'last_name' => $lastName,'reference' => $referenceNbr];
    $alertsQueueWorker->createItem($data);
  } elseif ($entity->getWebform()->id() == 'interest_form'){
    $advert = Drupal::routeMatch()->getParameter('node');
    Drupal::logger('rir_notifier')->debug('Request creation triggered... ');
    if (isset($advert)){
      Drupal::logger('rir_notifier')->debug('Node detected...: ');
      $contactEmail = $advert->get('field_advert_contact_email')->value;
      $visitEmail1 = $advert->get('field_visit_email_address1')->value;
      $visitEmail2 = $advert->get('field_visit_email_address1')->value;
      $mailManager = Drupal::service('plugin.manager.mail');
      $module = 'rir_notifier';
      $key = 'details_request_sent';
      $to = $contactEmail;
      $params['message'] = 'A new request for details has been sent...';
      $langcode = Drupal::currentUser()->getPreferredLangcode();
      $send = TRUE;
      $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
      if ($result['result'] !== true) {
        Drupal::logger('rir_notifier')->error('Sending mail failed: ' + $to);
      }
      else {
        Drupal::logger('rir_notifier')->notice('Email sent successfully to ' + $to);
      }
    }
  }
}

function getRequestCategoryReference($location, $advertType, $propertyType){
  if (empty($location)){
    $location = 'loc';
  }
  if (empty($advertType) or $advertType == 'All'){
    $advertType = 'ad';
  }
  if (empty($propertyType) or $propertyType == 'All'){
    $propertyType = 'pro';
  }
  return $location . '-' . $advertType . '-' . $propertyType;
}

/**
 * Implements hook_mail().
 */
function rir_notifier_mail($key, &$message, $params) {
  $options = array(
    'langcode' => $message['langcode']
  );
  switch ($key){
    case 'details_request_sent':
      $message['from'] = Drupal::config('system.site')->get('mail');
      $message['subject'] = t('Request sent for more details', $options);
      $message['body'][] = $params['message'];
      break;
  }
}