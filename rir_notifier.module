<?php
/**
* @file
* A description of what your module does.
*/

use Drupal\webform\WebformSubmissionInterface;

/**
 * Implements hook_page_attachments().
 */
function rir_notifier_page_attachments(array &$attachments) {
  if (Drupal::currentUser()->isAnonymous()){
    $attachments['#attached']['library'][] = 'rir_notifier/rir_scripts';
    $attachments['#attached']['library'][] = 'core/drupal.dialog.ajax';
  }
}

/**
 * Implements hook_theme().
 */
function rir_notifier_theme($existing, $type, $theme, $path) {

  return [
    'rir_subscribe_search' => [
      'variables' => [
        'button' => t('Subscribe'),
      ]
    ]
  ];
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function rir_notifier_webform_submission_insert(WebformSubmissionInterface $entity) {
  if ($entity->getWebform()->id() == 'notification_subscription'){
    $location = $entity->getData('notif_property_location');
    $advertType = $entity->getData('notif_advert_type');
    $propertyType = $entity->getData('notif_property_type');
    $email = $entity->getData('notif_email');
    $firstName = $entity->getData('notif_firstname');
    $lastName = $entity->getData('notif_lastname');
    $referenceNbr = getRequestCategoryReference($location, $advertType, $propertyType);

    $alertsQueueWorker = Drupal::queue('alerts_processor');
    $data = (object)['email' => $email, 'first_name' => $firstName, 'last_name' => $lastName,'reference' => $referenceNbr];
    $alertsQueueWorker->createItem($data);

  }
}

function getRequestCategoryReference($location, $advertType, $propertyType){
  if (empty($location)){
    $location = 'loc';
  }
  if (empty($advertType) or $advertType == 'All'){
    $advertType = 'ad';
  }
  if (empty($propertyType) or $propertyType == 'All'){
    $advertType = 'pro';
  }
  return $location . '-' . $advertType . '-' . $propertyType;
}